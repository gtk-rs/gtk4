// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Surface;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;

glib::glib_wrapper! {
    pub struct DragSurface(Interface<ffi::GdkDragSurface>) @requires Surface;

    match fn {
        get_type => || ffi::gdk_drag_surface_get_type(),
    }
}

pub const NONE_DRAG_SURFACE: Option<&DragSurface> = None;

pub trait DragSurfaceExt: 'static {
    fn present(&self, width: i32, height: i32) -> bool;
}

impl<O: IsA<DragSurface>> DragSurfaceExt for O {
    fn present(&self, width: i32, height: i32) -> bool {
        unsafe {
            from_glib(ffi::gdk_drag_surface_present(
                self.as_ref().to_glib_none().0,
                width,
                height,
            ))
        }
    }
}

impl fmt::Display for DragSurface {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("DragSurface")
    }
}
