// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Event;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    pub struct FocusEvent(Object<ffi::GdkFocusEvent>) @extends Event;

    match fn {
        get_type => || ffi::gdk_focus_event_get_type(),
    }
}

impl FocusEvent {
    #[doc(alias = "gdk_focus_event_get_in")]
    pub fn get_in(&self) -> bool {
        unsafe { from_glib(ffi::gdk_focus_event_get_in(self.to_glib_none().0)) }
    }
}

impl fmt::Display for FocusEvent {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("FocusEvent")
    }
}
