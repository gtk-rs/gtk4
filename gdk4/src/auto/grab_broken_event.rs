// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Event;
use crate::Surface;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    pub struct GrabBrokenEvent(Object<ffi::GdkGrabBrokenEvent>) @extends Event;

    match fn {
        get_type => || ffi::gdk_grab_broken_event_get_type(),
    }
}

impl GrabBrokenEvent {
    #[doc(alias = "gdk_grab_broken_event_get_grab_surface")]
    pub fn get_grab_surface(&self) -> Option<Surface> {
        unsafe {
            from_glib_none(ffi::gdk_grab_broken_event_get_grab_surface(
                self.to_glib_none().0,
            ))
        }
    }

    #[doc(alias = "gdk_grab_broken_event_get_implicit")]
    pub fn get_implicit(&self) -> bool {
        unsafe {
            from_glib(ffi::gdk_grab_broken_event_get_implicit(
                self.to_glib_none().0,
            ))
        }
    }
}

impl fmt::Display for GrabBrokenEvent {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("GrabBrokenEvent")
    }
}
