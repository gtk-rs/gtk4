// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::Accessible;
use crate::Buildable;
use crate::ConstraintTarget;
use crate::Dialog;
use crate::Native;
use crate::PageSetup;
use crate::PrintSettings;
use crate::Root;
use crate::ShortcutManager;
use crate::Widget;
use crate::Window;
use glib::object::Cast;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    pub struct PageSetupUnixDialog(Object<ffi::GtkPageSetupUnixDialog>) @extends Dialog, Window, Widget, @implements Accessible, Buildable, ConstraintTarget, Native, Root, ShortcutManager;

    match fn {
        get_type => || ffi::gtk_page_setup_unix_dialog_get_type(),
    }
}

impl PageSetupUnixDialog {
    #[doc(alias = "gtk_page_setup_unix_dialog_new")]
    pub fn new<P: IsA<Window>>(title: Option<&str>, parent: Option<&P>) -> PageSetupUnixDialog {
        assert_initialized_main_thread!();
        unsafe {
            Widget::from_glib_none(ffi::gtk_page_setup_unix_dialog_new(
                title.to_glib_none().0,
                parent.map(|p| p.as_ref()).to_glib_none().0,
            ))
            .unsafe_cast()
        }
    }

    #[doc(alias = "gtk_page_setup_unix_dialog_get_page_setup")]
    pub fn get_page_setup(&self) -> PageSetup {
        unsafe {
            from_glib_none(ffi::gtk_page_setup_unix_dialog_get_page_setup(
                self.to_glib_none().0,
            ))
        }
    }

    #[doc(alias = "gtk_page_setup_unix_dialog_get_print_settings")]
    pub fn get_print_settings(&self) -> PrintSettings {
        unsafe {
            from_glib_none(ffi::gtk_page_setup_unix_dialog_get_print_settings(
                self.to_glib_none().0,
            ))
        }
    }

    #[doc(alias = "gtk_page_setup_unix_dialog_set_page_setup")]
    pub fn set_page_setup(&self, page_setup: &PageSetup) {
        unsafe {
            ffi::gtk_page_setup_unix_dialog_set_page_setup(
                self.to_glib_none().0,
                page_setup.to_glib_none().0,
            );
        }
    }

    #[doc(alias = "gtk_page_setup_unix_dialog_set_print_settings")]
    pub fn set_print_settings(&self, print_settings: &PrintSettings) {
        unsafe {
            ffi::gtk_page_setup_unix_dialog_set_print_settings(
                self.to_glib_none().0,
                print_settings.to_glib_none().0,
            );
        }
    }
}

impl fmt::Display for PageSetupUnixDialog {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("PageSetupUnixDialog")
    }
}
