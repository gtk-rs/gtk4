// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::ShortcutAction;
use glib::translate::*;
use std::fmt;

glib::glib_wrapper! {
    pub struct MnemonicAction(Object<ffi::GtkMnemonicAction, ffi::GtkMnemonicActionClass>) @extends ShortcutAction;

    match fn {
        get_type => || ffi::gtk_mnemonic_action_get_type(),
    }
}

impl MnemonicAction {
    pub fn get() -> Option<ShortcutAction> {
        assert_initialized_main_thread!();
        unsafe { from_glib_none(ffi::gtk_mnemonic_action_get()) }
    }
}

impl fmt::Display for MnemonicAction {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("MnemonicAction")
    }
}
